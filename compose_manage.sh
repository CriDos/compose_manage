#!/bin/bash

# ==============================================================================
#   –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Docker-–ø—Ä–æ–µ–∫—Ç–∞–º–∏
#   –í–µ—Ä—Å–∏—è 3.1: –£–ª—É—á—à–µ–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–µ–Ω—é
# ==============================================================================

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
PROJECT_NAME=$(basename "$(pwd)")
HINT_COLUMN=30 

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ---
set -e 

# –¶–≤–µ—Ç–∞
C_RESET='\033[0m'
C_RED='\033[0;31m'
C_GREEN='\033[0;32m'
C_YELLOW='\033[0;33m'
C_CYAN='\033[1;96m'
C_GRAY='\033[0;90m'

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
cd "$SCRIPT_DIR" || exit

# --- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã docker-compose ---
DOCKER_COMPOSE_CMD=""
if command -v docker-compose &> /dev/null; then
    DOCKER_COMPOSE_CMD="docker-compose"
elif docker compose version &> /dev/null; then
    DOCKER_COMPOSE_CMD="docker compose"
fi

# --- –ü—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ---
check_dependencies() {
    if ! command -v docker &> /dev/null; then
        echo -e "${C_RED}–û—à–∏–±–∫–∞: Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker.${C_RESET}"
        exit 1
    fi

    if [ -z "$DOCKER_COMPOSE_CMD" ]; then
        echo -e "${C_RED}–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∏ –∫–æ–º–∞–Ω–¥–∞ 'docker-compose', –Ω–∏ 'docker compose'.${C_RESET}"
        echo -e "${C_YELLOW}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–ª–∞–≥–∏–Ω Docker Compose (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è).${C_RESET}"
        echo -e "${C_CYAN}–ü—Ä–∏–º–µ—Ä –¥–ª—è Ubuntu/Debian (–ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker):${C_RESET}"
        echo -e "${C_GRAY}sudo apt-get update && sudo apt-get install docker-compose-plugin${C_RESET}"
        exit 1
    fi
    
    if [ ! -f "docker-compose.yml" ] && [ ! -f "docker-compose.yaml" ]; then
        echo -e "${C_RED}–û—à–∏–±–∫–∞: –§–∞–π–ª docker-compose.yml –∏–ª–∏ docker-compose.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.${C_RESET}"
        exit 1
    fi
}

# --- –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ---

start_project() {
    echo -e "${C_GREEN}‚úÖ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ '${PROJECT_NAME}'...${C_RESET}"
    sudo $DOCKER_COMPOSE_CMD up -d
    echo -e "${C_GREEN}–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.${C_RESET}"
}

stop_project() {
    echo -e "${C_YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ '${PROJECT_NAME}'...${C_RESET}"
    sudo $DOCKER_COMPOSE_CMD down
    echo -e "${C_YELLOW}–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${C_RESET}"
}

restart_project() {
    echo -e "${C_CYAN}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ '${PROJECT_NAME}'...${C_RESET}"
    stop_project
    start_project
}

update_project() {
    echo -e "${C_CYAN}üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ '${PROJECT_NAME}'...${C_RESET}"
    echo -e "${C_GRAY}1/3: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤...${C_RESET}"
    sudo $DOCKER_COMPOSE_CMD pull
    echo -e "${C_GRAY}2/3: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å –Ω–æ–≤—ã–º–∏ –æ–±—Ä–∞–∑–∞–º–∏...${C_RESET}"
    sudo $DOCKER_COMPOSE_CMD up -d --remove-orphans
    echo -e "${C_GREEN}üéâ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω!${C_RESET}"
}

rebuild_project() {
    echo -e "${C_CYAN}üõ†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${C_RESET}"
    sudo $DOCKER_COMPOSE_CMD up -d --force-recreate
    echo -e "${C_GREEN}–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã.${C_RESET}"
}

show_status() {
    echo -e "${C_CYAN}üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –¥–ª—è '${PROJECT_NAME}':${C_RESET}"
    sudo $DOCKER_COMPOSE_CMD ps
}

show_logs() {
    echo -e "${C_GRAY}üìú –õ–æ–≥–∏ –ø—Ä–æ–µ–∫—Ç–∞ '${PROJECT_NAME}' (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)...${C_RESET}"
    sudo $DOCKER_COMPOSE_CMD logs -f --tail="100"
}

open_shell() {
    local service
    service=$1
    if [ -z "$service" ]; then
        echo -e "${C_YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:${C_RESET}"
        sudo $DOCKER_COMPOSE_CMD ps --services
        read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–µ—Ä–≤–∏—Å–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: " service
        if [ -z "$service" ]; then echo -e "${C_RED}–û—Ç–º–µ–Ω–µ–Ω–æ.${C_RESET}"; exit 1; fi
    fi
    echo -e "${C_GREEN}–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ '$service'...${C_RESET}"
    sudo $DOCKER_COMPOSE_CMD exec "$service" /bin/bash || sudo $DOCKER_COMPOSE_CMD exec "$service" /bin/sh
}

prune_system() {
    echo -e "${C_RED}–í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –≤—Å–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ Docker-–æ–±—ä–µ–∫—Ç—ã –í –°–ò–°–¢–ï–ú–ï.${C_RESET}"
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? [y/N]: " confirmation
    if [[ "$confirmation" != "y" && "$confirmation" != "Y" ]]; then echo "–û—Ç–º–µ–Ω–µ–Ω–æ."; exit 0; fi
    echo -e "${C_YELLOW}–û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã Docker...${C_RESET}"
    sudo docker system prune -af
}

destroy_project() {
    echo -e "${C_RED}!!! –í–ù–ò–ú–ê–ù–ò–ï: –ù–ï–û–ë–†–ê–¢–ò–ú–û–ï –î–ï–ô–°–¢–í–ò–ï !!!${C_RESET}"
    echo -e "${C_YELLOW}–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, —Å–µ—Ç–∏, –¢–û–ú–ê (–î–ê–ù–ù–´–ï) –∏ –æ–±—Ä–∞–∑—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ–µ–∫—Ç–æ–º '${PROJECT_NAME}'.${C_RESET}"
    echo -e "${C_RED}–í—Å–µ –¥–∞–Ω–Ω—ã–µ, —Ö—Ä–∞–Ω—è—â–∏–µ—Å—è –≤ —Ç–æ–º–∞—Ö Docker, –±—É–¥—É—Ç –ü–û–¢–ï–†–Ø–ù–´ –ù–ê–í–°–ï–ì–î–ê.${C_RESET}"
    read -p "–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ 'yes': " confirmation

    if [[ "$confirmation" != "yes" ]]; then
        echo "–û—Ç–º–µ–Ω–µ–Ω–æ."
        exit 0
    fi

    echo -e "${C_YELLOW}–ù–∞—á–∏–Ω–∞—é –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...${C_RESET}"
    sudo $DOCKER_COMPOSE_CMD down -v --rmi all
    echo -e "${C_GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç '${PROJECT_NAME}' –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω.${C_RESET}"
}


# --- –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é ---

show_interactive_menu() {
    local format_default=" [${C_YELLOW}%s${C_RESET}] %s\033[${HINT_COLUMN}G${C_GRAY}%s${C_RESET}\n"
    local format_danger=" [${C_YELLOW}%s${C_RESET}] %s\033[${HINT_COLUMN}G${C_RED}%s${C_RESET}\n"
    
    clear
    echo -e "${C_CYAN}======================================================================${C_RESET}"
    echo -e "   –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è: ${C_GREEN}${PROJECT_NAME}${C_RESET} ${C_GRAY}(–∏—Å–ø. $DOCKER_COMPOSE_CMD)${C_RESET}"
    echo -e "${C_CYAN}======================================================================${C_RESET}"
    printf "$format_default" "1" "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç" "–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (up -d)"
    printf "$format_default" "2" "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç" "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (down)"
    printf "$format_default" "3" "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç" "–ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç (down & up)"
    printf "$format_default" "4" "–û–±–Ω–æ–≤–∏—Ç—å" "–°–∫–∞—á–∏–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã (pull & up)"
    printf "$format_default" "5" "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å" "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (ps)"
    printf "$format_default" "6" "–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏" "–í—ã–≤–æ–¥–∏—Ç –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo ""
    echo -e "${C_GRAY}--- –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ ---${C_RESET}"
    printf "$format_default" "7" "–í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä" "–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ shell —Å–µ—Ä–≤–∏—Å–∞"
    printf "$format_default" "8" "–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å" "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    printf "$format_danger"  "9" "–û—á–∏—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É" "–£–¥–∞–ª—è–µ—Ç –Ω–µ–∏—Å–ø. –æ–±—ä–µ–∫—Ç—ã Docker"
    printf "$format_danger"  "10" "–£–î–ê–õ–ò–¢–¨ –ü–†–û–ï–ö–¢" "–£–¥–∞–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, —Ç–æ–º–∞ –∏ –æ–±—Ä–∞–∑—ã"
    echo ""
    printf "$format_default" "0" "–í—ã—Ö–æ–¥" "–ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Å–∫—Ä–∏–ø—Ç–∞"
    echo -e "${C_CYAN}======================================================================${C_RESET}"

    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ [0-10]: " choice

    case "$choice" in
        1) start_project ;; 2) stop_project ;; 3) restart_project ;;
        4) update_project ;; 5) show_status ;; 6) show_logs ;;
        7) open_shell ;; 8) rebuild_project ;; 9) prune_system ;;
        10) destroy_project ;;
        0) echo "–í—ã—Ö–æ–¥."; exit 0 ;;
        *) echo -e "${C_RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.${C_RESET}"; sleep 1; show_interactive_menu ;;
    esac
}

# --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ---
check_dependencies

if [ -z "$1" ]; then
    show_interactive_menu
else
    case "$1" in
        start|stop|restart|update|rebuild|status|logs|prune|destroy)
            "${1}_project"
            ;;
        shell) open_shell "$2" ;;
        *)
            echo -e "${C_RED}–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1${C_RESET}"
            exit 1
            ;;
    esac
fi

exit 0